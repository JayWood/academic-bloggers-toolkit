// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<AddDialog /> should match snapshot 1`] = `
<AddDialog
  focusTrapPaused={false}
  onSubmit={[Function]}
>
  <div>
    <form
      id="add-reference"
      onSubmit={[Function]}
    >
      <IdentifierInput
        fieldRef={[Function]}
        identifierList={""}
        onChange={[Function]}
      >
        <div>
          <label
            htmlFor="identifierList"
          >
            DOI/PMID/PMCID
          </label>
          <input
            id="identifierList"
            onChange={[Function]}
            required={true}
            type="text"
            value=""
          />
          <style
            jsx={true}
          >
            
                    div {
                        padding: 10px;
                        display: flex;
                        align-items: center;
                    }
                    label {
                        margin-right: 10px;
                    }
                    input {
                        flex: auto;
                        height: 35px;
                        font-size: 16px;
                    }
                
          </style>
        </div>
      </IdentifierInput>
    </form>
    <ButtonRow
      addManually={false}
      attachInline={true}
      isLoading={false}
      onAttachInlineToggle={[Function]}
      onSearchPubmedClick={[Function]}
      onToggleManual={[Function]}
    >
      <div
        className="btn-row"
      >
        <Button
          flat={true}
          focusable={true}
          label="Add Manually"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="focusable btn-flat"
              onClick={[Function]}
              type="button"
            >
              Add Manually
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <Button
          disabled={false}
          flat={true}
          focusable={true}
          label="Search PubMed"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="focusable btn-flat"
              disabled={false}
              onClick={[Function]}
              type="button"
            >
              Search PubMed
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <span
          className="separator"
        />
        <ToggleSwitch
          checked={true}
          disabled={false}
          onChange={[Function]}
          tooltip={
            Object {
              "position": "left",
              "text": "Insert citation inline",
            }
          }
        >
          <div>
            <Tooltip
              active={false}
              id="inline-toggle"
              text="Insert citation inline"
              transform=""
            >
              <div
                className="abt-tooltip"
                id="inline-toggle"
                role="tooltip"
                style={
                  Object {
                    "transform": "",
                  }
                }
              >
                Insert citation inline
                <style
                  jsx={true}
                >
                  
                    .abt-tooltip {
                        pointer-events: none;
                        transform-origin: top center;
                        z-index: 1000;
                        background: rgba(66, 66, 66, 0.9);
                        border-radius: 2px;
                        color: white;
                        display: inline-block;
                        visibility: hidden;
                        font-size: 10px;
                        font-weight: 500;
                        line-height: 14px;
                        position: absolute;
                        padding: 8px;
                        text-align: center;
                        max-width: 170px;
                    }
                    .abt-tooltip--active {
                        visibility: visible;
                    }
                
                </style>
              </div>
            </Tooltip>
            <input
              aria-checked={true}
              aria-describedby="inline-toggle"
              aria-label="Insert citation inline"
              checked={true}
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              aria-checked={true}
              aria-disabled={false}
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              role="checkbox"
            />
            <style
              jsx={true}
            >
              
                    input {
                        opacity: 0 !important;
                        pointer-events: none;
                        position: absolute;
                        z-index: 1;
                    }
                    span {
                        position: relative;
                        display: block;
                        margin: 5px;
                        height: 20px;
                        width: 44px;
                        background: #898989;
                        border-radius: 100px;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    }
                    span:after {
                        position: absolute;
                        left: -2px;
                        top: -3px;
                        display: block;
                        width: 26px;
                        height: 26px;
                        border-radius: 100px;
                        background: #fff;
                        box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05);
                        content: '';
                        transition: all 0.3s ease;
                    }
                    span:active:after {
                        -webkit-transform: scale(1.15, 0.85);
                        transform: scale(1.15, 0.85);
                    }
                    input:checked + span {
                        background: #6f9eb1;
                    }
                    input:checked + span:after {
                        left: 20px;
                        background: #0085ba;
                    }
                    input:disabled + span {
                        background: #d5d5d5;
                        pointer-events: none;
                    }
                    input:disabled + span:after {
                        background: #bcbdbc;
                    }
                    input:disabled:checked + span {
                        background: #6f9eb1;
                        opacity: 0.7;
                    }
                    input:disabled:checked + span:after {
                        background: #0085ba;
                        opacity: 0.7;
                    }
                    input:focus + span {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-width: 1.1px;
                        outline-style: solid;
                        outline-offset: 5px;
                        transition: none;
                    }
                
            </style>
          </div>
        </ToggleSwitch>
        <Button
          focusable={true}
          form="add-reference"
          label="Add Reference"
          primary={true}
          type="submit"
        >
          <div>
            <button
              className="focusable btn-primary"
              form="add-reference"
              type="submit"
            >
              Add Reference
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <style
          jsx={true}
        >
          
                    .btn-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 -1px 0 rgba(16, 22, 26, .10);
                        border-radius: 0 0 2px 2px;
                        margin: 0;
                        justify-content: space-between;
                    }
                    span {
                        border-right: solid 2px rgba(0, 0, 0, 0.12);
                        height: 30px;
                        display: inline-block;
                    }
                
        </style>
      </div>
    </ButtonRow>
    <style
      jsx={true}
    >
      
                    div {
                        position: relative;
                    }
                
    </style>
  </div>
</AddDialog>
`;

exports[`<AddDialog /> should match snapshot 2`] = `
<AddDialog
  focusTrapPaused={false}
  onSubmit={[Function]}
>
  <div>
    <form
      id="add-reference"
      onSubmit={[Function]}
    >
      <ManualEntryContainer
        errorMessage={""}
        manualData={
          Object {
            "type": "webpage",
          }
        }
        onAutoCite={[Function]}
        onTypeChange={[Function]}
        people={
          Array [
            Object {
              "family": "",
              "given": "",
              "type": "author",
            },
          ]
        }
      >
        <div>
          <div
            id="type-select-row"
          >
            <label
              htmlFor="type-select"
            >
              Citation Type
            </label>
            <select
              id="type-select"
              onChange={[Function]}
              value="webpage"
            >
              <option
                aria-selected={false}
                key="0"
                value="bill"
              >
                Bill
              </option>
              <option
                aria-selected={false}
                key="1"
                value="book"
              >
                Book
              </option>
              <option
                aria-selected={false}
                key="2"
                value="chapter"
              >
                Book Section
              </option>
              <option
                aria-selected={false}
                key="3"
                value="legal_case"
              >
                Case
              </option>
              <option
                aria-selected={false}
                key="4"
                value="paper-conference"
              >
                Conference Proceeding
              </option>
              <option
                aria-selected={false}
                key="5"
                value="entry-encyclopedia"
              >
                Encyclopedia Entry
              </option>
              <option
                aria-selected={false}
                key="6"
                value="motion_picture"
              >
                Film
              </option>
              <option
                aria-selected={false}
                key="7"
                value="speech"
              >
                Hearing
              </option>
              <option
                aria-selected={false}
                key="8"
                value="article-journal"
              >
                Journal Article
              </option>
              <option
                aria-selected={false}
                key="9"
                value="article-magazine"
              >
                Magazine Article
              </option>
              <option
                aria-selected={false}
                key="10"
                value="article-newspaper"
              >
                Newspaper Article
              </option>
              <option
                aria-selected={false}
                key="11"
                value="patent"
              >
                Patent
              </option>
              <option
                aria-selected={false}
                key="12"
                value="testing"
              >
                Test not in use
              </option>
              <option
                aria-selected={false}
                key="13"
                value="testing2"
              >
                Test not in use
              </option>
              <option
                aria-selected={false}
                key="14"
                value="report"
              >
                Report
              </option>
              <option
                aria-selected={false}
                key="15"
                value="legislation"
              >
                Statute
              </option>
              <option
                aria-selected={false}
                key="16"
                value="thesis"
              >
                Thesis
              </option>
              <option
                aria-selected={false}
                key="17"
                value="broadcast"
              >
                Television Broadcast
              </option>
              <option
                aria-selected={true}
                key="18"
                value="webpage"
              >
                Web Page
              </option>
            </select>
          </div>
          <AutoCite
            getter={[Function]}
            kind="webpage"
            placeholder="URL"
          >
            <div>
              <label
                htmlFor="citequery"
              >
                Autocite
              </label>
              <input
                id="citequery"
                onChange={[Function]}
                onKeyDown={[Function]}
                placeholder="URL"
                type="url"
                value=""
              />
              <Button
                disabled={true}
                flat={true}
                label="Search"
                onClick={[Function]}
                type="button"
              >
                <div>
                  <button
                    className="btn-flat"
                    disabled={true}
                    onClick={[Function]}
                    type="button"
                  >
                    Search
                  </button>
                  <style
                    jsx={true}
                  >
                    
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                  </style>
                </div>
              </Button>
              <style
                jsx={true}
              >
                
                    div {
                        display: flex;
                        padding: 10px;
                        margin-bottom: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24), 0 -1px 0 rgba(16, 22, 26, .10);
                    }
                    #citequery {
                        margin: 0 10px;
                        flex: auto;
                        height: 28px;
                        font-size: 14px;
                    }
                
              </style>
            </div>
          </AutoCite>
          <div
            className="bounded-rect autocite"
            onWheel={[Function]}
          >
            <Callout
              intent="danger"
              isVisible={true}
              onDismiss={[Function]}
            />
            <People
              citationType="webpage"
              people={
                Array [
                  Object {
                    "family": "",
                    "given": "",
                    "type": "author",
                  },
                ]
              }
            >
              <div>
                <h2>
                  Contributors
                </h2>
                <Person
                  citationType="webpage"
                  fieldMap={
                    Object {
                      "fields": Array [
                        Object {
                          "label": "Content Title",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "title",
                        },
                        Object {
                          "label": "Website Title",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "container-title",
                        },
                        Object {
                          "label": "URL",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "URL",
                        },
                        Object {
                          "label": "Date",
                          "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                          "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                          "required": false,
                          "value": "issued",
                        },
                        Object {
                          "label": "Date Accessed",
                          "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                          "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                          "required": false,
                          "value": "accessed",
                        },
                      ],
                      "people": Array [
                        Object {
                          "label": "Author",
                          "type": "author",
                        },
                      ],
                      "title": "Web Page",
                    }
                  }
                  index={0}
                  key="person-0"
                  onChange={[Function]}
                  onRemove={[Function]}
                  person={
                    Object {
                      "family": "",
                      "given": "",
                      "type": "author",
                    }
                  }
                >
                  <div>
                    <select
                      data-field="type"
                      data-index={0}
                      onChange={[Function]}
                      value="author"
                    >
                      <option
                        aria-selected={true}
                        id="peopleSelect-0"
                        key="peopleSelect-0"
                        value="author"
                      >
                        Author
                      </option>
                    </select>
                    <input
                      aria-label="Surname"
                      data-field="family"
                      data-index={0}
                      id="person-family-0"
                      onChange={[Function]}
                      placeholder="Surname"
                      required={true}
                      type="text"
                      value=""
                    />
                    <input
                      aria-label="Given Name, M.I."
                      data-field="given"
                      data-index={0}
                      id="person-given-0"
                      onChange={[Function]}
                      placeholder="Given Name, M.I."
                      required={true}
                      type="text"
                      value=""
                    />
                    <Button
                      data-index={0}
                      flat={true}
                      icon="no-alt"
                      label="Given Name, M.I."
                      onClick={[Function]}
                      type="button"
                    >
                      <div>
                        <button
                          aria-label="Given Name, M.I."
                          className="btn-flat btn-icon"
                          data-index={0}
                          onClick={[Function]}
                          type="button"
                        >
                          <span
                            className="dashicons dashicons-no-alt"
                          />
                        </button>
                        <style
                          jsx={true}
                        >
                          
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                        </style>
                      </div>
                    </Button>
                    <style
                      jsx={true}
                    >
                      
                    div {
                        display: flex;
                        padding: 0 5px;
                        align-items: center;
                    }
                    input[type='text'] {
                        flex: auto;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                    select,
                    input {
                        margin: 0 5px;
                    }
                
                    </style>
                  </div>
                </Person>
                <div
                  className="btn-row"
                >
                  <Button
                    flat={true}
                    label="Add Contributor"
                    onClick={[Function]}
                    type="button"
                  >
                    <div>
                      <button
                        className="btn-flat"
                        onClick={[Function]}
                        type="button"
                      >
                        Add Contributor
                      </button>
                      <style
                        jsx={true}
                      >
                        
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                      </style>
                    </div>
                  </Button>
                </div>
                <style
                  jsx={true}
                >
                  
                    .btn-row {
                        display: flex;
                        justify-content: center;
                        padding: 5px;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
                </style>
              </div>
            </People>
            <MetaFields
              meta={
                Object {
                  "type": "webpage",
                }
              }
            >
              <div>
                <h2>
                  Web Page
                </h2>
                <div
                  className="table"
                >
                  <Field
                    field={
                      Object {
                        "label": "Content Title",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "title",
                      }
                    }
                    key="Web Page-meta-0"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="title"
                      >
                        Content Title
                      </label>
                      <input
                        id="title"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Website Title",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "container-title",
                      }
                    }
                    key="Web Page-meta-1"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="container-title"
                      >
                        Website Title
                      </label>
                      <input
                        id="container-title"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "URL",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "URL",
                      }
                    }
                    key="Web Page-meta-2"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="URL"
                      >
                        URL
                      </label>
                      <input
                        id="URL"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Date",
                        "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                        "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                        "required": false,
                        "value": "issued",
                      }
                    }
                    key="Web Page-meta-3"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="issued"
                      >
                        Date
                      </label>
                      <input
                        id="issued"
                        onChange={[Function]}
                        pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                        placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                        required={false}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Date Accessed",
                        "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                        "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                        "required": false,
                        "value": "accessed",
                      }
                    }
                    key="Web Page-meta-4"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="accessed"
                      >
                        Date Accessed
                      </label>
                      <input
                        id="accessed"
                        onChange={[Function]}
                        pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                        placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                        required={false}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                </div>
                <style
                  jsx={true}
                >
                  
                    .table {
                        display: table;
                        padding: 10px;
                        width: 100%;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
                </style>
              </div>
            </MetaFields>
          </div>
          <style
            jsx={true}
          >
            
                    label {
                        margin-right: 10px;
                    }
                    select {
                        flex: auto;
                    }
                    #type-select-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                    }
                    .bounded-rect {
                        max-height: calc(100vh - 200px);
                        overflow-y: auto;
                        overflow-x: hidden;
                    }
                    .autocite {
                        max-height: calc(100vh - 250px);
                    }
                
          </style>
        </div>
      </ManualEntryContainer>
    </form>
    <ButtonRow
      addManually={true}
      attachInline={true}
      isLoading={false}
      onAttachInlineToggle={[Function]}
      onSearchPubmedClick={[Function]}
      onToggleManual={[Function]}
    >
      <div
        className="btn-row"
      >
        <Button
          flat={true}
          focusable={true}
          label="Add with Identifier"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="focusable btn-flat"
              onClick={[Function]}
              type="button"
            >
              Add with Identifier
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <Button
          disabled={true}
          flat={true}
          focusable={true}
          label="Search PubMed"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="focusable btn-flat"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Search PubMed
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <span
          className="separator"
        />
        <ToggleSwitch
          checked={true}
          disabled={false}
          onChange={[Function]}
          tooltip={
            Object {
              "position": "left",
              "text": "Insert citation inline",
            }
          }
        >
          <div>
            <Tooltip
              active={false}
              id="inline-toggle"
              text="Insert citation inline"
              transform=""
            >
              <div
                className="abt-tooltip"
                id="inline-toggle"
                role="tooltip"
                style={
                  Object {
                    "transform": "",
                  }
                }
              >
                Insert citation inline
                <style
                  jsx={true}
                >
                  
                    .abt-tooltip {
                        pointer-events: none;
                        transform-origin: top center;
                        z-index: 1000;
                        background: rgba(66, 66, 66, 0.9);
                        border-radius: 2px;
                        color: white;
                        display: inline-block;
                        visibility: hidden;
                        font-size: 10px;
                        font-weight: 500;
                        line-height: 14px;
                        position: absolute;
                        padding: 8px;
                        text-align: center;
                        max-width: 170px;
                    }
                    .abt-tooltip--active {
                        visibility: visible;
                    }
                
                </style>
              </div>
            </Tooltip>
            <input
              aria-checked={true}
              aria-describedby="inline-toggle"
              aria-label="Insert citation inline"
              checked={true}
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              aria-checked={true}
              aria-disabled={false}
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              role="checkbox"
            />
            <style
              jsx={true}
            >
              
                    input {
                        opacity: 0 !important;
                        pointer-events: none;
                        position: absolute;
                        z-index: 1;
                    }
                    span {
                        position: relative;
                        display: block;
                        margin: 5px;
                        height: 20px;
                        width: 44px;
                        background: #898989;
                        border-radius: 100px;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    }
                    span:after {
                        position: absolute;
                        left: -2px;
                        top: -3px;
                        display: block;
                        width: 26px;
                        height: 26px;
                        border-radius: 100px;
                        background: #fff;
                        box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05);
                        content: '';
                        transition: all 0.3s ease;
                    }
                    span:active:after {
                        -webkit-transform: scale(1.15, 0.85);
                        transform: scale(1.15, 0.85);
                    }
                    input:checked + span {
                        background: #6f9eb1;
                    }
                    input:checked + span:after {
                        left: 20px;
                        background: #0085ba;
                    }
                    input:disabled + span {
                        background: #d5d5d5;
                        pointer-events: none;
                    }
                    input:disabled + span:after {
                        background: #bcbdbc;
                    }
                    input:disabled:checked + span {
                        background: #6f9eb1;
                        opacity: 0.7;
                    }
                    input:disabled:checked + span:after {
                        background: #0085ba;
                        opacity: 0.7;
                    }
                    input:focus + span {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-width: 1.1px;
                        outline-style: solid;
                        outline-offset: 5px;
                        transition: none;
                    }
                
            </style>
          </div>
        </ToggleSwitch>
        <Button
          focusable={true}
          form="add-reference"
          label="Add Reference"
          primary={true}
          type="submit"
        >
          <div>
            <button
              className="focusable btn-primary"
              form="add-reference"
              type="submit"
            >
              Add Reference
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <style
          jsx={true}
        >
          
                    .btn-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 -1px 0 rgba(16, 22, 26, .10);
                        border-radius: 0 0 2px 2px;
                        margin: 0;
                        justify-content: space-between;
                    }
                    span {
                        border-right: solid 2px rgba(0, 0, 0, 0.12);
                        height: 30px;
                        display: inline-block;
                    }
                
        </style>
      </div>
    </ButtonRow>
    <style
      jsx={true}
    >
      
                    div {
                        position: relative;
                    }
                
    </style>
  </div>
</AddDialog>
`;

exports[`<AddDialog /> should match snapshot 3`] = `
<AddDialog
  focusTrapPaused={false}
  onSubmit={[Function]}
>
  <div>
    <Container
      currentDialog={"PUBMED"}
      onClose={[Function]}
      overlayOpacity={0.2}
      title="Search PubMed"
      width={600}
    >
      <div
        className="dialog"
        onKeyDown={[Function]}
        onWheel={[Function]}
        style={
          Object {
            "background": "rgba(0, 0, 0, 0.2)",
          }
        }
      >
        <FocusTrap
          _createFocusTrap={[Function]}
          active={true}
          focusTrapOptions={Object {}}
          paused={false}
          tag="div"
        >
          <div>
            <div
              aria-labelledby="dialog-label-Search_PubMed"
              className="dialog__main"
              role="dialog"
              style={
                Object {
                  "width": 600,
                }
              }
            >
              <header>
                <span
                  className="dialog__title"
                  id="dialog-label-Search_PubMed"
                >
                  Search PubMed
                </span>
                <button
                  aria-label="Close dialog"
                  onClick={[Function]}
                >
                  <span
                    className="dashicons dashicons-no-alt"
                  />
                </button>
              </header>
              <div
                className="dialog__body"
              >
                <PubmedDialog
                  focusTrapPaused={false}
                  onSubmit={[Function]}
                >
                  <div
                    id="pubmed-dialog-root"
                  >
                    <form
                      id="query"
                      onSubmit={[Function]}
                    >
                      <Callout
                        intent="danger"
                        isVisible={true}
                        onDismiss={[Function]}
                      />
                      <div
                        className="pubmed-input-row"
                      >
                        <input
                          autoFocus={true}
                          onChange={[Function]}
                          placeholder=""
                          required={true}
                          type="text"
                          value=""
                        />
                        <Button
                          disabled={true}
                          flat={true}
                          label="Search"
                          type="submit"
                        >
                          <div>
                            <button
                              className="btn-flat"
                              disabled={true}
                              type="submit"
                            >
                              Search
                            </button>
                            <style
                              jsx={true}
                            >
                              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                            </style>
                          </div>
                        </Button>
                      </div>
                    </form>
                    <style
                      jsx={true}
                    >
                      
                    .pubmed-input-row {
                        display: flex;
                        align-items: center;
                        padding: 0 10px;
                    }
                    form {
                        background: rgba(0, 0, 0, 0.05);
                        padding: 10px 0;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                    }
                    input[type='text'] {
                        flex: auto;
                        margin-right: 10px;
                        height: 35px;
                        font-size: 16px;
                    }
                    #pubmed-dialog-root,
                    form {
                        border-radius: 0 0 2px 2px;
                    }
                
                    </style>
                  </div>
                </PubmedDialog>
              </div>
            </div>
          </div>
        </FocusTrap>
        <style
          jsx={true}
        >
          
                    header {
                        height: 40px;
                        font-size: 16px;
                        font-weight: 500;
                        color: #23282d;
                        display: flex;
                        justify-content: space-between;
                        line-height: 40px;
                        background: #f5f5f5;
                        border-radius: 4px 4px 0 0;
                        box-shadow: 0 1px 0 rgba(16, 22, 26, 0.15);
                    }
                    button {
                        cursor: pointer;
                        border: 0;
                        outline: 0;
                        padding: 0;
                        background: transparent;
                        color: #555d66;
                        width: 40px;
                    }
                    button:hover {
                        color: black;
                    }
                    button:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                    }
                    .dialog {
                        position: fixed;
                        height: 100vh;
                        width: 100vw;
                        top: 0;
                        left: 0;
                        z-index: 9999;
                        display: flex;
                        flex-direction: column;
                        justify-content: center;
                        align-items: center;
                    }
                    .dialog__main {
                        height: auto;
                        margin-bottom: -32px;
                        border-radius: 4px;
                        background: white;
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                    }
                    .dialog__title {
                        margin: 0 10px;
                    }
                    .dashicons-no-alt {
                        font-size: 25px;
                        width: 25px;
                        height: 25px;
                    }
                
        </style>
      </div>
    </Container>
    <form
      id="add-reference"
      onSubmit={[Function]}
    >
      <ManualEntryContainer
        errorMessage={""}
        manualData={
          Object {
            "type": "webpage",
          }
        }
        onAutoCite={[Function]}
        onTypeChange={[Function]}
        people={
          Array [
            Object {
              "family": "",
              "given": "",
              "type": "author",
            },
          ]
        }
      >
        <div>
          <div
            id="type-select-row"
          >
            <label
              htmlFor="type-select"
            >
              Citation Type
            </label>
            <select
              id="type-select"
              onChange={[Function]}
              value="webpage"
            >
              <option
                aria-selected={false}
                key="0"
                value="bill"
              >
                Bill
              </option>
              <option
                aria-selected={false}
                key="1"
                value="book"
              >
                Book
              </option>
              <option
                aria-selected={false}
                key="2"
                value="chapter"
              >
                Book Section
              </option>
              <option
                aria-selected={false}
                key="3"
                value="legal_case"
              >
                Case
              </option>
              <option
                aria-selected={false}
                key="4"
                value="paper-conference"
              >
                Conference Proceeding
              </option>
              <option
                aria-selected={false}
                key="5"
                value="entry-encyclopedia"
              >
                Encyclopedia Entry
              </option>
              <option
                aria-selected={false}
                key="6"
                value="motion_picture"
              >
                Film
              </option>
              <option
                aria-selected={false}
                key="7"
                value="speech"
              >
                Hearing
              </option>
              <option
                aria-selected={false}
                key="8"
                value="article-journal"
              >
                Journal Article
              </option>
              <option
                aria-selected={false}
                key="9"
                value="article-magazine"
              >
                Magazine Article
              </option>
              <option
                aria-selected={false}
                key="10"
                value="article-newspaper"
              >
                Newspaper Article
              </option>
              <option
                aria-selected={false}
                key="11"
                value="patent"
              >
                Patent
              </option>
              <option
                aria-selected={false}
                key="12"
                value="testing"
              >
                Test not in use
              </option>
              <option
                aria-selected={false}
                key="13"
                value="testing2"
              >
                Test not in use
              </option>
              <option
                aria-selected={false}
                key="14"
                value="report"
              >
                Report
              </option>
              <option
                aria-selected={false}
                key="15"
                value="legislation"
              >
                Statute
              </option>
              <option
                aria-selected={false}
                key="16"
                value="thesis"
              >
                Thesis
              </option>
              <option
                aria-selected={false}
                key="17"
                value="broadcast"
              >
                Television Broadcast
              </option>
              <option
                aria-selected={true}
                key="18"
                value="webpage"
              >
                Web Page
              </option>
            </select>
          </div>
          <AutoCite
            getter={[Function]}
            kind="webpage"
            placeholder="URL"
          >
            <div>
              <label
                htmlFor="citequery"
              >
                Autocite
              </label>
              <input
                id="citequery"
                onChange={[Function]}
                onKeyDown={[Function]}
                placeholder="URL"
                type="url"
                value=""
              />
              <Button
                disabled={true}
                flat={true}
                label="Search"
                onClick={[Function]}
                type="button"
              >
                <div>
                  <button
                    className="btn-flat"
                    disabled={true}
                    onClick={[Function]}
                    type="button"
                  >
                    Search
                  </button>
                  <style
                    jsx={true}
                  >
                    
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                  </style>
                </div>
              </Button>
              <style
                jsx={true}
              >
                
                    div {
                        display: flex;
                        padding: 10px;
                        margin-bottom: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24), 0 -1px 0 rgba(16, 22, 26, .10);
                    }
                    #citequery {
                        margin: 0 10px;
                        flex: auto;
                        height: 28px;
                        font-size: 14px;
                    }
                
              </style>
            </div>
          </AutoCite>
          <div
            className="bounded-rect autocite"
            onWheel={[Function]}
          >
            <Callout
              intent="danger"
              isVisible={true}
              onDismiss={[Function]}
            />
            <People
              citationType="webpage"
              people={
                Array [
                  Object {
                    "family": "",
                    "given": "",
                    "type": "author",
                  },
                ]
              }
            >
              <div>
                <h2>
                  Contributors
                </h2>
                <Person
                  citationType="webpage"
                  fieldMap={
                    Object {
                      "fields": Array [
                        Object {
                          "label": "Content Title",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "title",
                        },
                        Object {
                          "label": "Website Title",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "container-title",
                        },
                        Object {
                          "label": "URL",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "URL",
                        },
                        Object {
                          "label": "Date",
                          "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                          "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                          "required": false,
                          "value": "issued",
                        },
                        Object {
                          "label": "Date Accessed",
                          "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                          "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                          "required": false,
                          "value": "accessed",
                        },
                      ],
                      "people": Array [
                        Object {
                          "label": "Author",
                          "type": "author",
                        },
                      ],
                      "title": "Web Page",
                    }
                  }
                  index={0}
                  key="person-0"
                  onChange={[Function]}
                  onRemove={[Function]}
                  person={
                    Object {
                      "family": "",
                      "given": "",
                      "type": "author",
                    }
                  }
                >
                  <div>
                    <select
                      data-field="type"
                      data-index={0}
                      onChange={[Function]}
                      value="author"
                    >
                      <option
                        aria-selected={true}
                        id="peopleSelect-0"
                        key="peopleSelect-0"
                        value="author"
                      >
                        Author
                      </option>
                    </select>
                    <input
                      aria-label="Surname"
                      data-field="family"
                      data-index={0}
                      id="person-family-0"
                      onChange={[Function]}
                      placeholder="Surname"
                      required={true}
                      type="text"
                      value=""
                    />
                    <input
                      aria-label="Given Name, M.I."
                      data-field="given"
                      data-index={0}
                      id="person-given-0"
                      onChange={[Function]}
                      placeholder="Given Name, M.I."
                      required={true}
                      type="text"
                      value=""
                    />
                    <Button
                      data-index={0}
                      flat={true}
                      icon="no-alt"
                      label="Given Name, M.I."
                      onClick={[Function]}
                      type="button"
                    >
                      <div>
                        <button
                          aria-label="Given Name, M.I."
                          className="btn-flat btn-icon"
                          data-index={0}
                          onClick={[Function]}
                          type="button"
                        >
                          <span
                            className="dashicons dashicons-no-alt"
                          />
                        </button>
                        <style
                          jsx={true}
                        >
                          
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                        </style>
                      </div>
                    </Button>
                    <style
                      jsx={true}
                    >
                      
                    div {
                        display: flex;
                        padding: 0 5px;
                        align-items: center;
                    }
                    input[type='text'] {
                        flex: auto;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                    select,
                    input {
                        margin: 0 5px;
                    }
                
                    </style>
                  </div>
                </Person>
                <div
                  className="btn-row"
                >
                  <Button
                    flat={true}
                    label="Add Contributor"
                    onClick={[Function]}
                    type="button"
                  >
                    <div>
                      <button
                        className="btn-flat"
                        onClick={[Function]}
                        type="button"
                      >
                        Add Contributor
                      </button>
                      <style
                        jsx={true}
                      >
                        
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                      </style>
                    </div>
                  </Button>
                </div>
                <style
                  jsx={true}
                >
                  
                    .btn-row {
                        display: flex;
                        justify-content: center;
                        padding: 5px;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
                </style>
              </div>
            </People>
            <MetaFields
              meta={
                Object {
                  "type": "webpage",
                }
              }
            >
              <div>
                <h2>
                  Web Page
                </h2>
                <div
                  className="table"
                >
                  <Field
                    field={
                      Object {
                        "label": "Content Title",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "title",
                      }
                    }
                    key="Web Page-meta-0"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="title"
                      >
                        Content Title
                      </label>
                      <input
                        id="title"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Website Title",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "container-title",
                      }
                    }
                    key="Web Page-meta-1"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="container-title"
                      >
                        Website Title
                      </label>
                      <input
                        id="container-title"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "URL",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "URL",
                      }
                    }
                    key="Web Page-meta-2"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="URL"
                      >
                        URL
                      </label>
                      <input
                        id="URL"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Date",
                        "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                        "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                        "required": false,
                        "value": "issued",
                      }
                    }
                    key="Web Page-meta-3"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="issued"
                      >
                        Date
                      </label>
                      <input
                        id="issued"
                        onChange={[Function]}
                        pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                        placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                        required={false}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Date Accessed",
                        "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                        "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                        "required": false,
                        "value": "accessed",
                      }
                    }
                    key="Web Page-meta-4"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="accessed"
                      >
                        Date Accessed
                      </label>
                      <input
                        id="accessed"
                        onChange={[Function]}
                        pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                        placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                        required={false}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                </div>
                <style
                  jsx={true}
                >
                  
                    .table {
                        display: table;
                        padding: 10px;
                        width: 100%;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
                </style>
              </div>
            </MetaFields>
          </div>
          <style
            jsx={true}
          >
            
                    label {
                        margin-right: 10px;
                    }
                    select {
                        flex: auto;
                    }
                    #type-select-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                    }
                    .bounded-rect {
                        max-height: calc(100vh - 200px);
                        overflow-y: auto;
                        overflow-x: hidden;
                    }
                    .autocite {
                        max-height: calc(100vh - 250px);
                    }
                
          </style>
        </div>
      </ManualEntryContainer>
    </form>
    <ButtonRow
      addManually={true}
      attachInline={true}
      isLoading={false}
      onAttachInlineToggle={[Function]}
      onSearchPubmedClick={[Function]}
      onToggleManual={[Function]}
    >
      <div
        className="btn-row"
      >
        <Button
          flat={true}
          focusable={true}
          label="Add with Identifier"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="focusable btn-flat"
              onClick={[Function]}
              type="button"
            >
              Add with Identifier
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <Button
          disabled={true}
          flat={true}
          focusable={true}
          label="Search PubMed"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="focusable btn-flat"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Search PubMed
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <span
          className="separator"
        />
        <ToggleSwitch
          checked={true}
          disabled={false}
          onChange={[Function]}
          tooltip={
            Object {
              "position": "left",
              "text": "Insert citation inline",
            }
          }
        >
          <div>
            <Tooltip
              active={false}
              id="inline-toggle"
              text="Insert citation inline"
              transform=""
            >
              <div
                className="abt-tooltip"
                id="inline-toggle"
                role="tooltip"
                style={
                  Object {
                    "transform": "",
                  }
                }
              >
                Insert citation inline
                <style
                  jsx={true}
                >
                  
                    .abt-tooltip {
                        pointer-events: none;
                        transform-origin: top center;
                        z-index: 1000;
                        background: rgba(66, 66, 66, 0.9);
                        border-radius: 2px;
                        color: white;
                        display: inline-block;
                        visibility: hidden;
                        font-size: 10px;
                        font-weight: 500;
                        line-height: 14px;
                        position: absolute;
                        padding: 8px;
                        text-align: center;
                        max-width: 170px;
                    }
                    .abt-tooltip--active {
                        visibility: visible;
                    }
                
                </style>
              </div>
            </Tooltip>
            <input
              aria-checked={true}
              aria-describedby="inline-toggle"
              aria-label="Insert citation inline"
              checked={true}
              disabled={false}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              aria-checked={true}
              aria-disabled={false}
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              role="checkbox"
            />
            <style
              jsx={true}
            >
              
                    input {
                        opacity: 0 !important;
                        pointer-events: none;
                        position: absolute;
                        z-index: 1;
                    }
                    span {
                        position: relative;
                        display: block;
                        margin: 5px;
                        height: 20px;
                        width: 44px;
                        background: #898989;
                        border-radius: 100px;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    }
                    span:after {
                        position: absolute;
                        left: -2px;
                        top: -3px;
                        display: block;
                        width: 26px;
                        height: 26px;
                        border-radius: 100px;
                        background: #fff;
                        box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05);
                        content: '';
                        transition: all 0.3s ease;
                    }
                    span:active:after {
                        -webkit-transform: scale(1.15, 0.85);
                        transform: scale(1.15, 0.85);
                    }
                    input:checked + span {
                        background: #6f9eb1;
                    }
                    input:checked + span:after {
                        left: 20px;
                        background: #0085ba;
                    }
                    input:disabled + span {
                        background: #d5d5d5;
                        pointer-events: none;
                    }
                    input:disabled + span:after {
                        background: #bcbdbc;
                    }
                    input:disabled:checked + span {
                        background: #6f9eb1;
                        opacity: 0.7;
                    }
                    input:disabled:checked + span:after {
                        background: #0085ba;
                        opacity: 0.7;
                    }
                    input:focus + span {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-width: 1.1px;
                        outline-style: solid;
                        outline-offset: 5px;
                        transition: none;
                    }
                
            </style>
          </div>
        </ToggleSwitch>
        <Button
          focusable={true}
          form="add-reference"
          label="Add Reference"
          primary={true}
          type="submit"
        >
          <div>
            <button
              className="focusable btn-primary"
              form="add-reference"
              type="submit"
            >
              Add Reference
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <style
          jsx={true}
        >
          
                    .btn-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 -1px 0 rgba(16, 22, 26, .10);
                        border-radius: 0 0 2px 2px;
                        margin: 0;
                        justify-content: space-between;
                    }
                    span {
                        border-right: solid 2px rgba(0, 0, 0, 0.12);
                        height: 30px;
                        display: inline-block;
                    }
                
        </style>
      </div>
    </ButtonRow>
    <style
      jsx={true}
    >
      
                    div {
                        position: relative;
                    }
                
    </style>
  </div>
</AddDialog>
`;

exports[`<AddDialog /> should match snapshot 4`] = `
<AddDialog
  focusTrapPaused={false}
  onSubmit={[Function]}
>
  <div>
    <Spinner
      bgColor="transparent"
      overlay={true}
      size="40px"
    >
      <div
        className="abt-spinner abt-spinner_overlay"
        style={
          Object {
            "backgroundColor": undefined,
          }
        }
      >
        <svg
          height="40px"
          viewBox="0 0 66 66"
          width="40px"
        >
          <circle
            cx="33"
            cy="33"
            fill="none"
            r="30"
            strokeLinecap="round"
            strokeWidth="6"
          />
        </svg>
        <style
          jsx={true}
        >
          
                    @keyframes colors {
                        0% {
                            stroke: #4285f4;
                        }
                        25% {
                            stroke: #de3e35;
                        }
                        50% {
                            stroke: #f7c223;
                        }
                        75% {
                            stroke: #1b9a59;
                        }
                        100% {
                            stroke: #4285f4;
                        }
                    }
                    @keyframes dash {
                        0% {
                            stroke-dashoffset: 187;
                        }
                        50% {
                            stroke-dashoffset: 46.75;
                            -webkit-transform: rotate(135deg);
                            transform: rotate(135deg);
                        }
                        100% {
                            stroke-dashoffset: 187;
                            -webkit-transform: rotate(450deg);
                            transform: rotate(450deg);
                        }
                    }
                    @keyframes rotator {
                        0% {
                            -webkit-transform: rotate(0deg);
                            transform: rotate(0deg);
                        }
                        100% {
                            -webkit-transform: rotate(270deg);
                            transform: rotate(270deg);
                        }
                    }
                    .abt-spinner {
                        display: flex;
                        height: 100%;
                        width: 100%;
                        pointer-events: none;
                        align-items: center;
                        justify-content: center;
                    }
                    .abt-spinner_overlay {
                        position: absolute;
                        pointer-events: auto;
                        background: rgba(0, 0, 0, 0.2);
                    }
                    svg {
                        animation: rotator 1.4s linear infinite;
                    }
                    circle {
                        stroke-dasharray: 187;
                        stroke-dashoffset: 0;
                        transform-origin: center;
                        animation: dash 1.4s ease-in-out infinite, colors 5.6s ease-in-out infinite;
                    }
                
        </style>
      </div>
    </Spinner>
    <form
      id="add-reference"
      onSubmit={[Function]}
    >
      <ManualEntryContainer
        errorMessage={""}
        manualData={
          Object {
            "type": "webpage",
          }
        }
        onAutoCite={[Function]}
        onTypeChange={[Function]}
        people={
          Array [
            Object {
              "family": "",
              "given": "",
              "type": "author",
            },
          ]
        }
      >
        <div>
          <div
            id="type-select-row"
          >
            <label
              htmlFor="type-select"
            >
              Citation Type
            </label>
            <select
              id="type-select"
              onChange={[Function]}
              value="webpage"
            >
              <option
                aria-selected={false}
                key="0"
                value="bill"
              >
                Bill
              </option>
              <option
                aria-selected={false}
                key="1"
                value="book"
              >
                Book
              </option>
              <option
                aria-selected={false}
                key="2"
                value="chapter"
              >
                Book Section
              </option>
              <option
                aria-selected={false}
                key="3"
                value="legal_case"
              >
                Case
              </option>
              <option
                aria-selected={false}
                key="4"
                value="paper-conference"
              >
                Conference Proceeding
              </option>
              <option
                aria-selected={false}
                key="5"
                value="entry-encyclopedia"
              >
                Encyclopedia Entry
              </option>
              <option
                aria-selected={false}
                key="6"
                value="motion_picture"
              >
                Film
              </option>
              <option
                aria-selected={false}
                key="7"
                value="speech"
              >
                Hearing
              </option>
              <option
                aria-selected={false}
                key="8"
                value="article-journal"
              >
                Journal Article
              </option>
              <option
                aria-selected={false}
                key="9"
                value="article-magazine"
              >
                Magazine Article
              </option>
              <option
                aria-selected={false}
                key="10"
                value="article-newspaper"
              >
                Newspaper Article
              </option>
              <option
                aria-selected={false}
                key="11"
                value="patent"
              >
                Patent
              </option>
              <option
                aria-selected={false}
                key="12"
                value="testing"
              >
                Test not in use
              </option>
              <option
                aria-selected={false}
                key="13"
                value="testing2"
              >
                Test not in use
              </option>
              <option
                aria-selected={false}
                key="14"
                value="report"
              >
                Report
              </option>
              <option
                aria-selected={false}
                key="15"
                value="legislation"
              >
                Statute
              </option>
              <option
                aria-selected={false}
                key="16"
                value="thesis"
              >
                Thesis
              </option>
              <option
                aria-selected={false}
                key="17"
                value="broadcast"
              >
                Television Broadcast
              </option>
              <option
                aria-selected={true}
                key="18"
                value="webpage"
              >
                Web Page
              </option>
            </select>
          </div>
          <AutoCite
            getter={[Function]}
            kind="webpage"
            placeholder="URL"
          >
            <div>
              <label
                htmlFor="citequery"
              >
                Autocite
              </label>
              <input
                id="citequery"
                onChange={[Function]}
                onKeyDown={[Function]}
                placeholder="URL"
                type="url"
                value=""
              />
              <Button
                disabled={true}
                flat={true}
                label="Search"
                onClick={[Function]}
                type="button"
              >
                <div>
                  <button
                    className="btn-flat"
                    disabled={true}
                    onClick={[Function]}
                    type="button"
                  >
                    Search
                  </button>
                  <style
                    jsx={true}
                  >
                    
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                  </style>
                </div>
              </Button>
              <style
                jsx={true}
              >
                
                    div {
                        display: flex;
                        padding: 10px;
                        margin-bottom: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24), 0 -1px 0 rgba(16, 22, 26, .10);
                    }
                    #citequery {
                        margin: 0 10px;
                        flex: auto;
                        height: 28px;
                        font-size: 14px;
                    }
                
              </style>
            </div>
          </AutoCite>
          <div
            className="bounded-rect autocite"
            onWheel={[Function]}
          >
            <Callout
              intent="danger"
              isVisible={true}
              onDismiss={[Function]}
            />
            <People
              citationType="webpage"
              people={
                Array [
                  Object {
                    "family": "",
                    "given": "",
                    "type": "author",
                  },
                ]
              }
            >
              <div>
                <h2>
                  Contributors
                </h2>
                <Person
                  citationType="webpage"
                  fieldMap={
                    Object {
                      "fields": Array [
                        Object {
                          "label": "Content Title",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "title",
                        },
                        Object {
                          "label": "Website Title",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "container-title",
                        },
                        Object {
                          "label": "URL",
                          "pattern": ".*",
                          "placeholder": "",
                          "required": true,
                          "value": "URL",
                        },
                        Object {
                          "label": "Date",
                          "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                          "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                          "required": false,
                          "value": "issued",
                        },
                        Object {
                          "label": "Date Accessed",
                          "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                          "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                          "required": false,
                          "value": "accessed",
                        },
                      ],
                      "people": Array [
                        Object {
                          "label": "Author",
                          "type": "author",
                        },
                      ],
                      "title": "Web Page",
                    }
                  }
                  index={0}
                  key="person-0"
                  onChange={[Function]}
                  onRemove={[Function]}
                  person={
                    Object {
                      "family": "",
                      "given": "",
                      "type": "author",
                    }
                  }
                >
                  <div>
                    <select
                      data-field="type"
                      data-index={0}
                      onChange={[Function]}
                      value="author"
                    >
                      <option
                        aria-selected={true}
                        id="peopleSelect-0"
                        key="peopleSelect-0"
                        value="author"
                      >
                        Author
                      </option>
                    </select>
                    <input
                      aria-label="Surname"
                      data-field="family"
                      data-index={0}
                      id="person-family-0"
                      onChange={[Function]}
                      placeholder="Surname"
                      required={true}
                      type="text"
                      value=""
                    />
                    <input
                      aria-label="Given Name, M.I."
                      data-field="given"
                      data-index={0}
                      id="person-given-0"
                      onChange={[Function]}
                      placeholder="Given Name, M.I."
                      required={true}
                      type="text"
                      value=""
                    />
                    <Button
                      data-index={0}
                      flat={true}
                      icon="no-alt"
                      label="Given Name, M.I."
                      onClick={[Function]}
                      type="button"
                    >
                      <div>
                        <button
                          aria-label="Given Name, M.I."
                          className="btn-flat btn-icon"
                          data-index={0}
                          onClick={[Function]}
                          type="button"
                        >
                          <span
                            className="dashicons dashicons-no-alt"
                          />
                        </button>
                        <style
                          jsx={true}
                        >
                          
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                        </style>
                      </div>
                    </Button>
                    <style
                      jsx={true}
                    >
                      
                    div {
                        display: flex;
                        padding: 0 5px;
                        align-items: center;
                    }
                    input[type='text'] {
                        flex: auto;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                    select,
                    input {
                        margin: 0 5px;
                    }
                
                    </style>
                  </div>
                </Person>
                <div
                  className="btn-row"
                >
                  <Button
                    flat={true}
                    label="Add Contributor"
                    onClick={[Function]}
                    type="button"
                  >
                    <div>
                      <button
                        className="btn-flat"
                        onClick={[Function]}
                        type="button"
                      >
                        Add Contributor
                      </button>
                      <style
                        jsx={true}
                      >
                        
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                      </style>
                    </div>
                  </Button>
                </div>
                <style
                  jsx={true}
                >
                  
                    .btn-row {
                        display: flex;
                        justify-content: center;
                        padding: 5px;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
                </style>
              </div>
            </People>
            <MetaFields
              meta={
                Object {
                  "type": "webpage",
                }
              }
            >
              <div>
                <h2>
                  Web Page
                </h2>
                <div
                  className="table"
                >
                  <Field
                    field={
                      Object {
                        "label": "Content Title",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "title",
                      }
                    }
                    key="Web Page-meta-0"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="title"
                      >
                        Content Title
                      </label>
                      <input
                        id="title"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Website Title",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "container-title",
                      }
                    }
                    key="Web Page-meta-1"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="container-title"
                      >
                        Website Title
                      </label>
                      <input
                        id="container-title"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "URL",
                        "pattern": ".*",
                        "placeholder": "",
                        "required": true,
                        "value": "URL",
                      }
                    }
                    key="Web Page-meta-2"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="URL"
                      >
                        URL
                      </label>
                      <input
                        id="URL"
                        onChange={[Function]}
                        pattern=".*"
                        placeholder=""
                        required={true}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Date",
                        "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                        "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                        "required": false,
                        "value": "issued",
                      }
                    }
                    key="Web Page-meta-3"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="issued"
                      >
                        Date
                      </label>
                      <input
                        id="issued"
                        onChange={[Function]}
                        pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                        placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                        required={false}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                  <Field
                    field={
                      Object {
                        "label": "Date Accessed",
                        "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                        "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                        "required": false,
                        "value": "accessed",
                      }
                    }
                    key="Web Page-meta-4"
                    meta={
                      Object {
                        "type": "webpage",
                      }
                    }
                    onChange={[Function]}
                  >
                    <div
                      className="table__row"
                    >
                      <label
                        htmlFor="accessed"
                      >
                        Date Accessed
                      </label>
                      <input
                        id="accessed"
                        onChange={[Function]}
                        pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                        placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                        required={false}
                        type="text"
                        value=""
                      />
                      <style
                        jsx={true}
                      >
                        
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                      </style>
                    </div>
                  </Field>
                </div>
                <style
                  jsx={true}
                >
                  
                    .table {
                        display: table;
                        padding: 10px;
                        width: 100%;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
                </style>
              </div>
            </MetaFields>
          </div>
          <style
            jsx={true}
          >
            
                    label {
                        margin-right: 10px;
                    }
                    select {
                        flex: auto;
                    }
                    #type-select-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                    }
                    .bounded-rect {
                        max-height: calc(100vh - 200px);
                        overflow-y: auto;
                        overflow-x: hidden;
                    }
                    .autocite {
                        max-height: calc(100vh - 250px);
                    }
                
          </style>
        </div>
      </ManualEntryContainer>
    </form>
    <ButtonRow
      addManually={true}
      attachInline={true}
      isLoading={true}
      onAttachInlineToggle={[Function]}
      onSearchPubmedClick={[Function]}
      onToggleManual={[Function]}
    >
      <div
        className="btn-row"
      >
        <Button
          flat={true}
          focusable={true}
          label="Add with Identifier"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="focusable btn-flat"
              onClick={[Function]}
              type="button"
            >
              Add with Identifier
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <Button
          disabled={true}
          flat={true}
          focusable={true}
          label="Search PubMed"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="focusable btn-flat"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Search PubMed
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <span
          className="separator"
        />
        <ToggleSwitch
          checked={true}
          disabled={true}
          onChange={[Function]}
          tooltip={
            Object {
              "position": "left",
              "text": "Insert citation inline",
            }
          }
        >
          <div>
            <Tooltip
              active={false}
              id="inline-toggle"
              text="Insert citation inline"
              transform=""
            >
              <div
                className="abt-tooltip"
                id="inline-toggle"
                role="tooltip"
                style={
                  Object {
                    "transform": "",
                  }
                }
              >
                Insert citation inline
                <style
                  jsx={true}
                >
                  
                    .abt-tooltip {
                        pointer-events: none;
                        transform-origin: top center;
                        z-index: 1000;
                        background: rgba(66, 66, 66, 0.9);
                        border-radius: 2px;
                        color: white;
                        display: inline-block;
                        visibility: hidden;
                        font-size: 10px;
                        font-weight: 500;
                        line-height: 14px;
                        position: absolute;
                        padding: 8px;
                        text-align: center;
                        max-width: 170px;
                    }
                    .abt-tooltip--active {
                        visibility: visible;
                    }
                
                </style>
              </div>
            </Tooltip>
            <input
              aria-checked={true}
              aria-describedby="inline-toggle"
              aria-label="Insert citation inline"
              checked={true}
              disabled={true}
              onChange={[Function]}
              type="checkbox"
            />
            <span
              aria-checked={true}
              aria-disabled={true}
              onClick={[Function]}
              onMouseOut={[Function]}
              onMouseOver={[Function]}
              role="checkbox"
            />
            <style
              jsx={true}
            >
              
                    input {
                        opacity: 0 !important;
                        pointer-events: none;
                        position: absolute;
                        z-index: 1;
                    }
                    span {
                        position: relative;
                        display: block;
                        margin: 5px;
                        height: 20px;
                        width: 44px;
                        background: #898989;
                        border-radius: 100px;
                        cursor: pointer;
                        transition: all 0.3s ease;
                    }
                    span:after {
                        position: absolute;
                        left: -2px;
                        top: -3px;
                        display: block;
                        width: 26px;
                        height: 26px;
                        border-radius: 100px;
                        background: #fff;
                        box-shadow: 0px 3px 3px rgba(0, 0, 0, 0.05);
                        content: '';
                        transition: all 0.3s ease;
                    }
                    span:active:after {
                        -webkit-transform: scale(1.15, 0.85);
                        transform: scale(1.15, 0.85);
                    }
                    input:checked + span {
                        background: #6f9eb1;
                    }
                    input:checked + span:after {
                        left: 20px;
                        background: #0085ba;
                    }
                    input:disabled + span {
                        background: #d5d5d5;
                        pointer-events: none;
                    }
                    input:disabled + span:after {
                        background: #bcbdbc;
                    }
                    input:disabled:checked + span {
                        background: #6f9eb1;
                        opacity: 0.7;
                    }
                    input:disabled:checked + span:after {
                        background: #0085ba;
                        opacity: 0.7;
                    }
                    input:focus + span {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-width: 1.1px;
                        outline-style: solid;
                        outline-offset: 5px;
                        transition: none;
                    }
                
            </style>
          </div>
        </ToggleSwitch>
        <Button
          focusable={true}
          form="add-reference"
          label="Add Reference"
          primary={true}
          type="submit"
        >
          <div>
            <button
              className="focusable btn-primary"
              form="add-reference"
              type="submit"
            >
              Add Reference
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <style
          jsx={true}
        >
          
                    .btn-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 -1px 0 rgba(16, 22, 26, .10);
                        border-radius: 0 0 2px 2px;
                        margin: 0;
                        justify-content: space-between;
                    }
                    span {
                        border-right: solid 2px rgba(0, 0, 0, 0.12);
                        height: 30px;
                        display: inline-block;
                    }
                
        </style>
      </div>
    </ButtonRow>
    <style
      jsx={true}
    >
      
                    div {
                        position: relative;
                    }
                
    </style>
  </div>
</AddDialog>
`;
