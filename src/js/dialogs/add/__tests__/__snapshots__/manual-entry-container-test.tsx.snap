// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`<ManualEntryContainer /> should match snapshots 1`] = `
<ManualEntryContainer
  errorMessage={""}
  manualData={
    Object {
      "type": "webpage",
    }
  }
  onAutoCite={[Function]}
  onTypeChange={[Function]}
  people={
    Array [
      Object {
        "family": "",
        "given": "",
        "type": "author",
      },
    ]
  }
>
  <div>
    <div
      id="type-select-row"
    >
      <label
        htmlFor="type-select"
      >
        Citation Type
      </label>
      <select
        id="type-select"
        onChange={[Function]}
        value="webpage"
      >
        <option
          aria-selected={false}
          value="bill"
        >
          Bill
        </option>
        <option
          aria-selected={false}
          value="book"
        >
          Book
        </option>
        <option
          aria-selected={false}
          value="chapter"
        >
          Book Section
        </option>
        <option
          aria-selected={false}
          value="legal_case"
        >
          Case
        </option>
        <option
          aria-selected={false}
          value="paper-conference"
        >
          Conference Proceeding
        </option>
        <option
          aria-selected={false}
          value="entry-encyclopedia"
        >
          Encyclopedia Entry
        </option>
        <option
          aria-selected={false}
          value="motion_picture"
        >
          Film
        </option>
        <option
          aria-selected={false}
          value="speech"
        >
          Hearing
        </option>
        <option
          aria-selected={false}
          value="article-journal"
        >
          Journal Article
        </option>
        <option
          aria-selected={false}
          value="article-magazine"
        >
          Magazine Article
        </option>
        <option
          aria-selected={false}
          value="article-newspaper"
        >
          Newspaper Article
        </option>
        <option
          aria-selected={false}
          value="patent"
        >
          Patent
        </option>
        <option
          aria-selected={false}
          value="testing"
        >
          Test not in use
        </option>
        <option
          aria-selected={false}
          value="testing2"
        >
          Test not in use
        </option>
        <option
          aria-selected={false}
          value="report"
        >
          Report
        </option>
        <option
          aria-selected={false}
          value="legislation"
        >
          Statute
        </option>
        <option
          aria-selected={false}
          value="thesis"
        >
          Thesis
        </option>
        <option
          aria-selected={false}
          value="broadcast"
        >
          Television Broadcast
        </option>
        <option
          aria-selected={true}
          value="webpage"
        >
          Web Page
        </option>
      </select>
    </div>
    <AutoCite
      getter={[Function]}
      kind="webpage"
      placeholder="URL"
    >
      <div>
        <label
          htmlFor="citequery"
        >
          Autocite
        </label>
        <input
          id="citequery"
          onChange={[Function]}
          onKeyDown={[Function]}
          placeholder="URL"
          type="url"
          value=""
        />
        <Button
          disabled={true}
          flat={true}
          label="Search"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="btn-flat"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Search
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <style
          jsx={true}
        >
          
                    div {
                        display: flex;
                        padding: 10px;
                        margin-bottom: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24), 0 -1px 0 rgba(16, 22, 26, .10);
                    }
                    #citequery {
                        margin: 0 10px;
                        flex: auto;
                        height: 28px;
                        font-size: 14px;
                    }
                
        </style>
      </div>
    </AutoCite>
    <div
      className="bounded-rect autocite"
      onWheel={[Function]}
    >
      <Callout
        intent="danger"
        isVisible={true}
        onDismiss={[Function]}
      />
      <People
        citationType="webpage"
        people={
          Array [
            Object {
              "family": "",
              "given": "",
              "type": "author",
            },
          ]
        }
      >
        <div>
          <h2>
            Contributors
          </h2>
          <Person
            citationType="webpage"
            fieldMap={
              Object {
                "fields": Array [
                  Object {
                    "label": "Content Title",
                    "pattern": ".*",
                    "placeholder": "",
                    "required": true,
                    "value": "title",
                  },
                  Object {
                    "label": "Website Title",
                    "pattern": ".*",
                    "placeholder": "",
                    "required": true,
                    "value": "container-title",
                  },
                  Object {
                    "label": "URL",
                    "pattern": ".*",
                    "placeholder": "",
                    "required": true,
                    "value": "URL",
                  },
                  Object {
                    "label": "Date",
                    "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                    "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                    "required": false,
                    "value": "issued",
                  },
                  Object {
                    "label": "Date Accessed",
                    "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                    "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                    "required": false,
                    "value": "accessed",
                  },
                ],
                "people": Array [
                  Object {
                    "label": "Author",
                    "type": "author",
                  },
                ],
                "title": "Web Page",
              }
            }
            index={0}
            onChange={[Function]}
            onRemove={[Function]}
            person={
              Object {
                "family": "",
                "given": "",
                "type": "author",
              }
            }
          >
            <div>
              <select
                data-field="type"
                data-index={0}
                onChange={[Function]}
                value="author"
              >
                <option
                  aria-selected={true}
                  id="peopleSelect-0"
                  value="author"
                >
                  Author
                </option>
              </select>
              <input
                aria-label="Surname"
                data-field="family"
                data-index={0}
                id="person-family-0"
                onChange={[Function]}
                placeholder="Surname"
                required={true}
                type="text"
                value=""
              />
              <input
                aria-label="Given Name, M.I."
                data-field="given"
                data-index={0}
                id="person-given-0"
                onChange={[Function]}
                placeholder="Given Name, M.I."
                required={true}
                type="text"
                value=""
              />
              <Button
                data-index={0}
                flat={true}
                icon="no-alt"
                label="Given Name, M.I."
                onClick={[Function]}
                type="button"
              >
                <div>
                  <button
                    aria-label="Given Name, M.I."
                    className="btn-flat btn-icon"
                    data-index={0}
                    onClick={[Function]}
                    type="button"
                  >
                    <span
                      className="dashicons dashicons-no-alt"
                    />
                  </button>
                  <style
                    jsx={true}
                  >
                    
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                  </style>
                </div>
              </Button>
              <style
                jsx={true}
              >
                
                    div {
                        display: flex;
                        padding: 0 5px;
                        align-items: center;
                    }
                    input[type='text'] {
                        flex: auto;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                    select,
                    input {
                        margin: 0 5px;
                    }
                
              </style>
            </div>
          </Person>
          <div
            className="btn-row"
          >
            <Button
              flat={true}
              label="Add Contributor"
              onClick={[Function]}
              type="button"
            >
              <div>
                <button
                  className="btn-flat"
                  onClick={[Function]}
                  type="button"
                >
                  Add Contributor
                </button>
                <style
                  jsx={true}
                >
                  
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                </style>
              </div>
            </Button>
          </div>
          <style
            jsx={true}
          >
            
                    .btn-row {
                        display: flex;
                        justify-content: center;
                        padding: 5px;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
          </style>
        </div>
      </People>
      <MetaFields
        meta={
          Object {
            "type": "webpage",
          }
        }
      >
        <div>
          <h2>
            Web Page
          </h2>
          <div
            className="table"
          >
            <Field
              field={
                Object {
                  "label": "Content Title",
                  "pattern": ".*",
                  "placeholder": "",
                  "required": true,
                  "value": "title",
                }
              }
              meta={
                Object {
                  "type": "webpage",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="title"
                >
                  Content Title
                </label>
                <input
                  id="title"
                  onChange={[Function]}
                  pattern=".*"
                  placeholder=""
                  required={true}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Website Title",
                  "pattern": ".*",
                  "placeholder": "",
                  "required": true,
                  "value": "container-title",
                }
              }
              meta={
                Object {
                  "type": "webpage",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="container-title"
                >
                  Website Title
                </label>
                <input
                  id="container-title"
                  onChange={[Function]}
                  pattern=".*"
                  placeholder=""
                  required={true}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "URL",
                  "pattern": ".*",
                  "placeholder": "",
                  "required": true,
                  "value": "URL",
                }
              }
              meta={
                Object {
                  "type": "webpage",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="URL"
                >
                  URL
                </label>
                <input
                  id="URL"
                  onChange={[Function]}
                  pattern=".*"
                  placeholder=""
                  required={true}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Date",
                  "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                  "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                  "required": false,
                  "value": "issued",
                }
              }
              meta={
                Object {
                  "type": "webpage",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="issued"
                >
                  Date
                </label>
                <input
                  id="issued"
                  onChange={[Function]}
                  pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                  placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Date Accessed",
                  "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                  "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                  "required": false,
                  "value": "accessed",
                }
              }
              meta={
                Object {
                  "type": "webpage",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="accessed"
                >
                  Date Accessed
                </label>
                <input
                  id="accessed"
                  onChange={[Function]}
                  pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                  placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
          </div>
          <style
            jsx={true}
          >
            
                    .table {
                        display: table;
                        padding: 10px;
                        width: 100%;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
          </style>
        </div>
      </MetaFields>
    </div>
    <style
      jsx={true}
    >
      
                    label {
                        margin-right: 10px;
                    }
                    select {
                        flex: auto;
                    }
                    #type-select-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                    }
                    .bounded-rect {
                        max-height: calc(100vh - 200px);
                        overflow-y: auto;
                        overflow-x: hidden;
                    }
                    .autocite {
                        max-height: calc(100vh - 250px);
                    }
                
    </style>
  </div>
</ManualEntryContainer>
`;

exports[`<ManualEntryContainer /> should match snapshots 2`] = `
<ManualEntryContainer
  errorMessage={""}
  manualData={
    Object {
      "type": "book",
    }
  }
  onAutoCite={[Function]}
  onTypeChange={[Function]}
  people={
    Array [
      Object {
        "family": "",
        "given": "",
        "type": "author",
      },
    ]
  }
>
  <div>
    <div
      id="type-select-row"
    >
      <label
        htmlFor="type-select"
      >
        Citation Type
      </label>
      <select
        id="type-select"
        onChange={[Function]}
        value="book"
      >
        <option
          aria-selected={false}
          value="bill"
        >
          Bill
        </option>
        <option
          aria-selected={true}
          value="book"
        >
          Book
        </option>
        <option
          aria-selected={false}
          value="chapter"
        >
          Book Section
        </option>
        <option
          aria-selected={false}
          value="legal_case"
        >
          Case
        </option>
        <option
          aria-selected={false}
          value="paper-conference"
        >
          Conference Proceeding
        </option>
        <option
          aria-selected={false}
          value="entry-encyclopedia"
        >
          Encyclopedia Entry
        </option>
        <option
          aria-selected={false}
          value="motion_picture"
        >
          Film
        </option>
        <option
          aria-selected={false}
          value="speech"
        >
          Hearing
        </option>
        <option
          aria-selected={false}
          value="article-journal"
        >
          Journal Article
        </option>
        <option
          aria-selected={false}
          value="article-magazine"
        >
          Magazine Article
        </option>
        <option
          aria-selected={false}
          value="article-newspaper"
        >
          Newspaper Article
        </option>
        <option
          aria-selected={false}
          value="patent"
        >
          Patent
        </option>
        <option
          aria-selected={false}
          value="testing"
        >
          Test not in use
        </option>
        <option
          aria-selected={false}
          value="testing2"
        >
          Test not in use
        </option>
        <option
          aria-selected={false}
          value="report"
        >
          Report
        </option>
        <option
          aria-selected={false}
          value="legislation"
        >
          Statute
        </option>
        <option
          aria-selected={false}
          value="thesis"
        >
          Thesis
        </option>
        <option
          aria-selected={false}
          value="broadcast"
        >
          Television Broadcast
        </option>
        <option
          aria-selected={false}
          value="webpage"
        >
          Web Page
        </option>
      </select>
    </div>
    <AutoCite
      getter={[Function]}
      kind="book"
      pattern="(?:[dxX]-?){10}|(?:[dxX]-?){13}"
      placeholder="ISBN"
    >
      <div>
        <label
          htmlFor="citequery"
        >
          Autocite
        </label>
        <input
          id="citequery"
          onChange={[Function]}
          onKeyDown={[Function]}
          pattern="(?:[dxX]-?){10}|(?:[dxX]-?){13}"
          placeholder="ISBN"
          type="text"
          value=""
        />
        <Button
          disabled={true}
          flat={true}
          label="Search"
          onClick={[Function]}
          type="button"
        >
          <div>
            <button
              className="btn-flat"
              disabled={true}
              onClick={[Function]}
              type="button"
            >
              Search
            </button>
            <style
              jsx={true}
            >
              
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
            </style>
          </div>
        </Button>
        <style
          jsx={true}
        >
          
                    div {
                        display: flex;
                        padding: 10px;
                        margin-bottom: 10px;
                        align-items: center;
                        background: #f5f5f5;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24), 0 -1px 0 rgba(16, 22, 26, .10);
                    }
                    #citequery {
                        margin: 0 10px;
                        flex: auto;
                        height: 28px;
                        font-size: 14px;
                    }
                
        </style>
      </div>
    </AutoCite>
    <div
      className="bounded-rect autocite"
      onWheel={[Function]}
    >
      <Callout
        intent="danger"
        isVisible={true}
        onDismiss={[Function]}
      />
      <People
        citationType="book"
        people={
          Array [
            Object {
              "family": "",
              "given": "",
              "type": "author",
            },
          ]
        }
      >
        <div>
          <h2>
            Contributors
          </h2>
          <Person
            citationType="book"
            fieldMap={
              Object {
                "fields": Array [
                  Object {
                    "label": "Title",
                    "pattern": ".*",
                    "placeholder": "",
                    "required": true,
                    "value": "title",
                  },
                  Object {
                    "label": "Series Title",
                    "pattern": ".*",
                    "placeholder": "",
                    "required": false,
                    "value": "collection-title",
                  },
                  Object {
                    "label": "Series Number",
                    "pattern": "[0-9]+",
                    "placeholder": "",
                    "required": false,
                    "value": "collection-number",
                  },
                  Object {
                    "label": "# of Pages",
                    "pattern": "[0-9]+",
                    "placeholder": "",
                    "required": false,
                    "value": "number-of-pages",
                  },
                  Object {
                    "label": "Volume",
                    "pattern": "[0-9]+",
                    "placeholder": "",
                    "required": false,
                    "value": "volume",
                  },
                  Object {
                    "label": "Edition",
                    "pattern": "[0-9]+",
                    "placeholder": "",
                    "required": false,
                    "value": "edition",
                  },
                  Object {
                    "label": "Publisher",
                    "pattern": ".*",
                    "placeholder": "",
                    "required": true,
                    "value": "publisher",
                  },
                  Object {
                    "label": "Publisher Location",
                    "pattern": ".*",
                    "placeholder": "",
                    "required": false,
                    "value": "publisher-place",
                  },
                  Object {
                    "label": "Date",
                    "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                    "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                    "required": true,
                    "value": "issued",
                  },
                  Object {
                    "label": "Date Accessed",
                    "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                    "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                    "required": false,
                    "value": "accessed",
                  },
                ],
                "people": Array [
                  Object {
                    "label": "Author",
                    "type": "author",
                  },
                  Object {
                    "label": "Editor",
                    "type": "editor",
                  },
                  Object {
                    "label": "Series Editor",
                    "type": "collection-editor",
                  },
                  Object {
                    "label": "Translator",
                    "type": "translator",
                  },
                ],
                "title": "Book",
              }
            }
            index={0}
            onChange={[Function]}
            onRemove={[Function]}
            person={
              Object {
                "family": "",
                "given": "",
                "type": "author",
              }
            }
          >
            <div>
              <select
                data-field="type"
                data-index={0}
                onChange={[Function]}
                value="author"
              >
                <option
                  aria-selected={true}
                  id="peopleSelect-0"
                  value="author"
                >
                  Author
                </option>
                <option
                  aria-selected={false}
                  id="peopleSelect-1"
                  value="editor"
                >
                  Editor
                </option>
                <option
                  aria-selected={false}
                  id="peopleSelect-2"
                  value="collection-editor"
                >
                  Series Editor
                </option>
                <option
                  aria-selected={false}
                  id="peopleSelect-3"
                  value="translator"
                >
                  Translator
                </option>
              </select>
              <input
                aria-label="Surname"
                data-field="family"
                data-index={0}
                id="person-family-0"
                onChange={[Function]}
                placeholder="Surname"
                required={true}
                type="text"
                value=""
              />
              <input
                aria-label="Given Name, M.I."
                data-field="given"
                data-index={0}
                id="person-given-0"
                onChange={[Function]}
                placeholder="Given Name, M.I."
                required={true}
                type="text"
                value=""
              />
              <Button
                data-index={0}
                flat={true}
                icon="no-alt"
                label="Given Name, M.I."
                onClick={[Function]}
                type="button"
              >
                <div>
                  <button
                    aria-label="Given Name, M.I."
                    className="btn-flat btn-icon"
                    data-index={0}
                    onClick={[Function]}
                    type="button"
                  >
                    <span
                      className="dashicons dashicons-no-alt"
                    />
                  </button>
                  <style
                    jsx={true}
                  >
                    
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                  </style>
                </div>
              </Button>
              <style
                jsx={true}
              >
                
                    div {
                        display: flex;
                        padding: 0 5px;
                        align-items: center;
                    }
                    input[type='text'] {
                        flex: auto;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                    select,
                    input {
                        margin: 0 5px;
                    }
                
              </style>
            </div>
          </Person>
          <div
            className="btn-row"
          >
            <Button
              flat={true}
              label="Add Contributor"
              onClick={[Function]}
              type="button"
            >
              <div>
                <button
                  className="btn-flat"
                  onClick={[Function]}
                  type="button"
                >
                  Add Contributor
                </button>
                <style
                  jsx={true}
                >
                  
                    button {
                        -webkit-appearance: none;
                        -webkit-touch-callout: none;
                        -webkit-user-select: none;
                        -khtml-user-select: none;
                        -moz-user-select: none;
                        -ms-user-select: none;
                        user-select: none;
                        background: white;
                        box-sizing: border-box;
                        color: #555555;
                        background-image: none;
                        border: none;
                        border-radius: 2px;
                        box-shadow: 0 1px 3px rgba(0, 0, 0, .12), 0 1px 2px rgba(0, 0, 0, .24);
                        cursor: pointer;
                        display: inline-block;
                        font-size: 13px;
                        font-weight: 500;
                        height: 36px;
                        line-height: 36px;
                        min-width: 64px;
                        outline: 0;
                        padding: 0 16px;
                        text-align: center;
                        text-decoration: none;
                        text-transform: uppercase;
                        transition: 
            box-shadow .2s cubic-bezier(0.4, 0, 1, 1),
            background-color .2s cubic-bezier(0.4, 0, 0.2, 1),
            color .2s cubic-bezier(0.4, 0, 0.2, 1)
        ;
                        vertical-align: middle;
                        white-space: nowrap;
                    }
                    button:hover {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active {
                        box-shadow: 0 3px 6px rgba(0, 0, 0, .16), 0 3px 6px rgba(0, 0, 0, .23);
                    }
                    button:active:hover {
                        box-shadow: 0 10px 20px rgba(0, 0, 0, .19), 0 6px 6px rgba(0, 0, 0, .23);
                        background: rgba(0, 0, 0, 0.12);
                    }
                    button:disabled {
                        pointer-events: none !important;
                        color: #a0a5aa !important;
                    }
                    button.focusable:focus {
                        outline: 1.1px auto rgba(19, 124, 189, 0.5);
                        outline-offset: 2px;
                    }
                    button.focusable:focus:active {
                        outline: 0;
                    }
                    .btn-flat,
                    .btn-flat.btn-primary {
                        background: rgba(0, 0, 0, 0);
                        box-shadow: none !important;
                    }
                    .btn-flat:hover,
                    .btn-flat.btn-primary:hover {
                        background: rgba(158, 158, 158, 0.2);
                    }
                    .btn-flat:active,
                    .btn-flat.btn-primary:active {
                        background: rgba(13, 13, 13, 0.12);
                    }
                    .btn-flat:hover:active,
                    .btn-flat.btn-primary:hover:active {
                        background: rgba(0, 0, 0, 0.12);
                    }
                    .btn-flat.btn-primary {
                        color: #0085ba;
                    }
                    .btn-primary {
                        background: #0085ba;
                        color: white;
                    }
                    .btn-primary:active:hover {
                        background: #007aab;
                    }
                    .btn-primary:disabled {
                        opacity: 0.6;
                        box-shadow: none;
                        color: white !important;
                    }
                    .btn-icon {
                        border-radius: 50%;
                        font-size: 24px;
                        height: 32px;
                        margin: auto 0;
                        min-width: 32px;
                        width: 32px;
                        padding: 0;
                        line-height: normal;
                    }
                    .btn-icon:hover {
                        color: #555555;
                    }

                    .dashicons {
                        line-height: 32px !important;
                        width: 32px;
                        height: 32px;
                    }
                    .dashicons-migrate {
                        transform: rotateY(180deg);
                        padding-left: 5px;
                    }
                    .dashicons-minus {
                        font-weight: 900;
                    }
                    .dashicons-menu,
                    .dashicons-no-alt {
                        font-size: 25px;
                    }
                    .dashicons-plus {
                        padding-top: 2px;
                    }
                
                </style>
              </div>
            </Button>
          </div>
          <style
            jsx={true}
          >
            
                    .btn-row {
                        display: flex;
                        justify-content: center;
                        padding: 5px;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
          </style>
        </div>
      </People>
      <MetaFields
        meta={
          Object {
            "type": "book",
          }
        }
      >
        <div>
          <h2>
            Book
          </h2>
          <div
            className="table"
          >
            <Field
              field={
                Object {
                  "label": "Title",
                  "pattern": ".*",
                  "placeholder": "",
                  "required": true,
                  "value": "title",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="title"
                >
                  Title
                </label>
                <input
                  id="title"
                  onChange={[Function]}
                  pattern=".*"
                  placeholder=""
                  required={true}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Series Title",
                  "pattern": ".*",
                  "placeholder": "",
                  "required": false,
                  "value": "collection-title",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="collection-title"
                >
                  Series Title
                </label>
                <input
                  id="collection-title"
                  onChange={[Function]}
                  pattern=".*"
                  placeholder=""
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Series Number",
                  "pattern": "[0-9]+",
                  "placeholder": "",
                  "required": false,
                  "value": "collection-number",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="collection-number"
                >
                  Series Number
                </label>
                <input
                  id="collection-number"
                  onChange={[Function]}
                  pattern="[0-9]+"
                  placeholder=""
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "# of Pages",
                  "pattern": "[0-9]+",
                  "placeholder": "",
                  "required": false,
                  "value": "number-of-pages",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="number-of-pages"
                >
                  # of Pages
                </label>
                <input
                  id="number-of-pages"
                  onChange={[Function]}
                  pattern="[0-9]+"
                  placeholder=""
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Volume",
                  "pattern": "[0-9]+",
                  "placeholder": "",
                  "required": false,
                  "value": "volume",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="volume"
                >
                  Volume
                </label>
                <input
                  id="volume"
                  onChange={[Function]}
                  pattern="[0-9]+"
                  placeholder=""
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Edition",
                  "pattern": "[0-9]+",
                  "placeholder": "",
                  "required": false,
                  "value": "edition",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="edition"
                >
                  Edition
                </label>
                <input
                  id="edition"
                  onChange={[Function]}
                  pattern="[0-9]+"
                  placeholder=""
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Publisher",
                  "pattern": ".*",
                  "placeholder": "",
                  "required": true,
                  "value": "publisher",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="publisher"
                >
                  Publisher
                </label>
                <input
                  id="publisher"
                  onChange={[Function]}
                  pattern=".*"
                  placeholder=""
                  required={true}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Publisher Location",
                  "pattern": ".*",
                  "placeholder": "",
                  "required": false,
                  "value": "publisher-place",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="publisher-place"
                >
                  Publisher Location
                </label>
                <input
                  id="publisher-place"
                  onChange={[Function]}
                  pattern=".*"
                  placeholder=""
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Date",
                  "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                  "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                  "required": true,
                  "value": "issued",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="issued"
                >
                  Date
                </label>
                <input
                  id="issued"
                  onChange={[Function]}
                  pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                  placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                  required={true}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
            <Field
              field={
                Object {
                  "label": "Date Accessed",
                  "pattern": "[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$",
                  "placeholder": "YYYY/MM/DD or YYYY/MM or YYYY",
                  "required": false,
                  "value": "accessed",
                }
              }
              meta={
                Object {
                  "type": "book",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="accessed"
                >
                  Date Accessed
                </label>
                <input
                  id="accessed"
                  onChange={[Function]}
                  pattern="[0-9]{4}(\\\\/[0-9]{2})?(\\\\/[0-9]{2})?(?!\\\\/)$"
                  placeholder="YYYY/MM/DD or YYYY/MM or YYYY"
                  required={false}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
          </div>
          <style
            jsx={true}
          >
            
                    .table {
                        display: table;
                        padding: 10px;
                        width: 100%;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
          </style>
        </div>
      </MetaFields>
    </div>
    <style
      jsx={true}
    >
      
                    label {
                        margin-right: 10px;
                    }
                    select {
                        flex: auto;
                    }
                    #type-select-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                    }
                    .bounded-rect {
                        max-height: calc(100vh - 200px);
                        overflow-y: auto;
                        overflow-x: hidden;
                    }
                    .autocite {
                        max-height: calc(100vh - 250px);
                    }
                
    </style>
  </div>
</ManualEntryContainer>
`;

exports[`<ManualEntryContainer /> should match snapshots 3`] = `
<ManualEntryContainer
  errorMessage={""}
  manualData={
    Object {
      "type": "article",
    }
  }
  onAutoCite={[Function]}
  onTypeChange={[Function]}
  people={
    Array [
      Object {
        "family": "",
        "given": "",
        "type": "author",
      },
    ]
  }
>
  <div>
    <div
      id="type-select-row"
    >
      <label
        htmlFor="type-select"
      >
        Citation Type
      </label>
      <select
        id="type-select"
        onChange={[Function]}
        value="article"
      >
        <option
          aria-selected={false}
          value="bill"
        >
          Bill
        </option>
        <option
          aria-selected={false}
          value="book"
        >
          Book
        </option>
        <option
          aria-selected={false}
          value="chapter"
        >
          Book Section
        </option>
        <option
          aria-selected={false}
          value="legal_case"
        >
          Case
        </option>
        <option
          aria-selected={false}
          value="paper-conference"
        >
          Conference Proceeding
        </option>
        <option
          aria-selected={false}
          value="entry-encyclopedia"
        >
          Encyclopedia Entry
        </option>
        <option
          aria-selected={false}
          value="motion_picture"
        >
          Film
        </option>
        <option
          aria-selected={false}
          value="speech"
        >
          Hearing
        </option>
        <option
          aria-selected={false}
          value="article-journal"
        >
          Journal Article
        </option>
        <option
          aria-selected={false}
          value="article-magazine"
        >
          Magazine Article
        </option>
        <option
          aria-selected={false}
          value="article-newspaper"
        >
          Newspaper Article
        </option>
        <option
          aria-selected={false}
          value="patent"
        >
          Patent
        </option>
        <option
          aria-selected={false}
          value="testing"
        >
          Test not in use
        </option>
        <option
          aria-selected={false}
          value="testing2"
        >
          Test not in use
        </option>
        <option
          aria-selected={false}
          value="report"
        >
          Report
        </option>
        <option
          aria-selected={false}
          value="legislation"
        >
          Statute
        </option>
        <option
          aria-selected={false}
          value="thesis"
        >
          Thesis
        </option>
        <option
          aria-selected={false}
          value="broadcast"
        >
          Television Broadcast
        </option>
        <option
          aria-selected={false}
          value="webpage"
        >
          Web Page
        </option>
      </select>
    </div>
    <div
      className="bounded-rect"
      onWheel={[Function]}
    >
      <Callout
        intent="danger"
        isVisible={true}
        onDismiss={[Function]}
      />
      <MetaFields
        meta={
          Object {
            "type": "article",
          }
        }
      >
        <div>
          <h2>
            Generic (Note)
          </h2>
          <div
            className="table"
          >
            <Field
              field={
                Object {
                  "label": "Text",
                  "pattern": ".*",
                  "placeholder": "Note: This type may not work with certain citation styles",
                  "required": true,
                  "value": "title",
                }
              }
              meta={
                Object {
                  "type": "article",
                }
              }
              onChange={[Function]}
            >
              <div
                className="table__row"
              >
                <label
                  htmlFor="title"
                >
                  Text
                </label>
                <input
                  id="title"
                  onChange={[Function]}
                  pattern=".*"
                  placeholder="Note: This type may not work with certain citation styles"
                  required={true}
                  type="text"
                  value=""
                />
                <style
                  jsx={true}
                >
                  
                    div {
                        display: table-row;
                        width: 100%;
                    }
                    label {
                        display: table-cell;
                        width: auto;
                    }
                    input {
                        width: 95%;
                        height: 28px;
                        line-height: 28px;
                        font-size: 14px;
                    }
                
                </style>
              </div>
            </Field>
          </div>
          <style
            jsx={true}
          >
            
                    .table {
                        display: table;
                        padding: 10px;
                        width: 100%;
                    }
                    h2 {
                        font-size: 16px !important;
                    }
                
          </style>
        </div>
      </MetaFields>
    </div>
    <style
      jsx={true}
    >
      
                    label {
                        margin-right: 10px;
                    }
                    select {
                        flex: auto;
                    }
                    #type-select-row {
                        display: flex;
                        padding: 10px;
                        align-items: center;
                    }
                    .bounded-rect {
                        max-height: calc(100vh - 200px);
                        overflow-y: auto;
                        overflow-x: hidden;
                    }
                    .autocite {
                        max-height: calc(100vh - 250px);
                    }
                
    </style>
  </div>
</ManualEntryContainer>
`;
